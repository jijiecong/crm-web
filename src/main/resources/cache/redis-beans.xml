<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:p="http://www.springframework.org/schema/p">



	<bean id="redisSentinel" class="redis.clients.jedis.JedisSentinelPool">
		<constructor-arg index="0" value="mymaster" />
		<constructor-arg index="1">
			<set>
				<value>${redis.sentinel.address1}</value>
				<value>${redis.sentinel.address2}</value>
				<value>${redis.sentinel.address3}</value>
			</set>
		</constructor-arg>
		<constructor-arg index="2" ref="jedisPoolConfig"/>
		<constructor-arg index="3" value="${redis.sentinel.password}"/>
	</bean>

   	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
	 	<!-- 最大连接数, 默认8个 -->
		<property name="maxTotal" value="16" />
		<!--  最小空闲连接数, 默认0 -->
		<property name="minIdle" value="2" />
		<!--最大空闲连接数, 默认8个-->
		<property name="maxIdle" value="8" />
		<!-- 获取连接时的最大等待毫秒数(如果设置为阻塞时BlockWhenExhausted),如果超时就抛异常, 小于零:阻塞不确定的时间,  默认-1 -->
		<property name="maxWaitMillis" value="-1" />
		<!-- 在获取连接的时候检查有效性, 默认false -->
		<property name="testOnBorrow" value="false" />
		<!-- 在return给pool时，是否提前进行validate操作； -->
		<property name="testOnReturn" value="true" />
		<!-- 在空闲时检查有效性, 默认false -->
		<property name="testWhileIdle" value="true" />
	</bean>

	<!--<bean id="redisListener" class="com.meiren.redis.pubsub.RedisListener">-->
	<!--</bean>-->
	<bean id="stringCache" class="com.meiren.redis.utils.StringCache">
		<property name="jedisSentinelPool" ref="redisSentinel"/>
	</bean>
    <bean id="listCache" class="com.meiren.redis.utils.ListCache">
    	<property name="jedisSentinelPool" ref="redisSentinel"/>
    </bean>
    <bean id="hashCache" class="com.meiren.redis.utils.HashCache">
    	<property name="jedisSentinelPool" ref="redisSentinel"/>
    </bean>
    <bean id="setCache" class="com.meiren.redis.utils.SetCache">
    	<property name="jedisSentinelPool" ref="redisSentinel"/>
    </bean>
    <bean id="redisClient" class="com.meiren.redis.client.RedisClient">
    	<property name="jedisSentinelPool" ref="redisSentinel"/>
    </bean>
    <bean id="redisLock" class="com.meiren.redis.lock.RedisDistributedLock">
    	<property name="jedisSentinelPool" ref="redisSentinel"/>
    </bean>

</beans>
